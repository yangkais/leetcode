    class Solution {
        /**
         * 实例：                         y轴
         * 1 2 3                         |
         * 4 5 6                         |
         * 7 8 9                   [][] [][] [][]
         *  ------------------- [][0] [0][0] [][]-------------- x轴
         *                         [][] [][] [][]
         *                               |
         *                               |
         * 结果：顺时针旋转90 [[7,4,1],[8,5,2],[9,6,3]]
         * 7 4 1
         * 8 5 2
         * 9 6 3
         * 结论：int[2][0] => int[0][0]
         *      int[0][1] => int[1][0]
         *
         * @param matrix
         */
        public void rotate(int[][] matrix) {
            int n = matrix.length;
            // 水平翻转
            for (int i = 0; i < n / 2; ++i) {
                for (int j = 0; j < n; ++j) {
                    int temp = matrix[i][j];
                    matrix[i][j] = matrix[n - i - 1][j];
                    matrix[n - i - 1][j] = temp;
                }
            }
            // 主对角线翻转
            for (int i = 0; i < n; ++i) {
                for (int j = 0; j < i; ++j) {
                    int temp = matrix[i][j];
                    matrix[i][j] = matrix[j][i];
                    matrix[j][i] = temp;
                }
            }
        }
    }

//runtime:0 ms
//memory:38.5 MB
